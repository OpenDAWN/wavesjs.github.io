{
  "name": "breakpoint",
  "version": "0.3.0",
  "description": "Breakpoint visualiser component",
  "main": "breakpoint.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Victor Saiz"
  },
  "contributors": [
    {
      "name": "Benjamin Matuszewski"
    }
  ],
  "license": "BSD-3",
  "repository": {
    "type": "git",
    "url": "https://github.com/Ircam-RnD/breakpoint"
  },
  "dependencies": {
    "layer": "git://github.com/ircam-rnd/layer",
    "utils": "git://github.com/ircam-rnd/utils"
  },
  "devDependencies": {},
  "readme": "## Breakpoint component\n\nUse this module to visualise breakpoints over a shared timeline.  \nThe module relies on a [timeline](https://github.com/ircam-rnd/timeLine) instance.\n\n### Status\n\nThis library is under heavy development and subject to change.  \nEvert new API breaking change we will be adding snapshots to the repository so you can always fetch a working copy.\n\nFor an in depth  explanation on the philosophy and usage of this library please refer to [this blog post](http://wave.ircam.fr/publications/visual-tools/).\n\n### Demo\n\nA working demo for this module can be found [here](https://ircam-rnd.github.io/breakpoint-vis)\n\n### Public API\n\n##### `params(paramters)`\n\n> @param `parameters` {object}  \n> inherited from LayerVis, allow to customize the breakpoint-vis from a layer perspective.  \n\n_example:_\n\n```javascript\nvar breakpoints = breakpointVis()\n  .params({\n    // the data domain in the y axis\n    // inherits yDomain of the timeline if not defined\n    yDomain: [0, 1]\n    // opacity of the line and fallback opacity of the dots\n    // defaults to 1\n    opacity: 1, \n    // fallback color of the dots - defaults to '#000000'\n    color: 'red',\n    // color of the line - defaults to '#000000'\n    lineColor: '#242424',\n    // display the line between the dots - defaults to true\n    displayLine: true,\n    // type of interpolation between dots\n    // cf. https://github.com/mbostock/d3/wiki/SVG-Shapes#line_interpolate\n    interpolate: 'monotone',\n    // fallback for the dots radius - defaults to 3 pixels\n    radius: 3\n  });\n```\n\n##### `data(data)`\n\n> @param `data` {ArrayBuffer|Array}  \n> pass a reference of the data to visualize to the layer\n\n##### `cx(func)`\n##### `cy(func)`\n##### `r(func)`\n##### `opacity(func)`\n##### `color(func)`\n\n> @param `func` {function}  \n> accessors: function defining how to map your data with the breakpoint representation,   \n> the default accessors match the method name.\n\n_example:_ \n\n```javascript\nvar data = [\n  {\n    timecode: 1.2,\n    pitch: 64\n  },\n  // ...\n];\n\nvar breakpoints = breakpointVis()\n  .cx(function(d) { return d.timecode; })\n  .cy(function(d) { return d.pitch; });\n```\n\n### Example use\n\n```javascript\nvar d3 = require('d3');\nvar timeline = require('timeline');\nvar breakpointVis = require('breakpoint-vis');\n\n// some data to visualize\n// as the data match the structure required by the breakpointVis layer\n// there is no need to define accessors during the breakpointVis creation\nvar data = [\n  {\n    cx: 20,\n    cy: 0.5,\n    color: 'green',\n    opacity: 0.3\n  }, {\n    cx: 40,\n    cy: 0.3,\n    color: 'green',\n    opacity: 0.5\n  }, {\n    cx: 60,\n    cy: 0.7,\n    color: 'green',\n    opacity: 0.7\n  }, {\n    cx: 80,\n    cy: 0.5,\n    color: 'green',\n    opacity: 0.9\n  }\n];\n\n// create the timeline\nvar graph = timeline()\n  .width(width)\n  .height(height)\n  .xDomain([0, 100])\n  .yDomain([0, 1]);\n\n// create the layer and pass it a reference to the graph\nvar breakpoints = breakpointVis()\n  .params({\n    opacity: 1,\n    color: 'red',\n    lineColor: '#242424',\n    displayLine: true,\n    interpolate: 'monotone'\n  })\n  .data(data);\n\ngraph.add(breakpoints);\nd3.select('#timeline').call(graph.draw);\n\n// add entries in the array\ndata.splice(2, 0, { cx: 1, cy: 0.9 });\ndata.splice(4, 0, { cx: 99, cy: 0.1 });\n// update the layer\ngraph.update();\n```\n\n## License\nThis module is released under the [BSD-3-Clause license](http://opensource.org/licenses/BSD-3-Clause).\n## Acknowledgments\nThis code is part of the [WAVE project](http://wave.ircam.fr),  \nfunded by ANR (The French National Research Agency),  \n_ContInt_ program,  \n2012-2015.",
  "readmeFilename": "README.md",
  "gitHead": "4865198fa30c7dd12a4041a3f95e7e969476a52a",
  "bugs": {
    "url": "https://github.com/Ircam-RnD/breakpoint/issues"
  },
  "homepage": "https://github.com/Ircam-RnD/breakpoint",
  "_id": "breakpoint@0.3.0",
  "_shasum": "472f6156eb8931b7734dbac78be25aab5871cca6",
  "_from": "../../../../var/folders/jd/84c91jj5229fc6qpsc2f0d140000gn/T/npm-24811-e75d709c/1422546226729-0.38463118579238653/4865198fa30c7dd12a4041a3f95e7e969476a52a",
  "_resolved": "git://github.com/ircam-rnd/breakpoint#4865198fa30c7dd12a4041a3f95e7e969476a52a"
}
